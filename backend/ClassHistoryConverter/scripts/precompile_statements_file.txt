precompile(Tuple{typeof(Base.repeat), Char, Int64})
precompile(Tuple{typeof(Base.lock), Base.TTY})
precompile(Tuple{typeof(Base.unlock), Base.TTY})
precompile(Tuple{typeof(Base.map), Function, Array{Base.Dict{String, Dates.DateTime}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Dates.DateTime, 1}})
precompile(Tuple{Type{Pair{A, B} where B where A}, String, Dates.DateTime})
precompile(Tuple{typeof(TOML.Internals.Printer.is_array_of_tables), Array{Base.Dict{String, Dates.DateTime}, 1}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:indent, :sorted, :by, :inline_tables), Tuple{Int64, Bool, typeof(Base.identity), Base.IdSet{Base.Dict{String, V} where V}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{Base.var"##invokelatest#2", Base.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:indent, :sorted, :by, :inline_tables), Tuple{Int64, Bool, typeof(Base.identity), Base.IdSet{Base.Dict{String, V} where V}}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:indent, :sorted, :by, :inline_tables), Tuple{Int64, Bool, typeof(Base.identity), Base.IdSet{Base.Dict{String, V} where V}}}, typeof(TOML.Internals.Printer.print_table), Nothing, Base.IOStream, Base.Dict{String, Dates.DateTime}, Array{String, 1}})
precompile(Tuple{typeof(Base.similar), Array{Any, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Any, 1}})
precompile(Tuple{typeof(Base.similar), Array{String, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{String, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{String, 1}, String, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{String, Union{Array{String, 1}, String}}}, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Union{Array{String, 1}, String}}, Array{String, 1}, String})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{String, Base.UUID}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{String, Union{Array{String, 1}, String}}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{String, Array{String, 1}}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{String, Base.Dict{String, String}}, Base.IdDict{Any, Any}})
precompile(Tuple{Type{GenericMemory{:not_atomic, String, Core.AddrSpace{Core}(0x00)}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Pkg.API.instantiate)})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Array{Char, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Any})
precompile(Tuple{Base.Experimental.var"#1#2"{Base.Channel{Any}, Task}})
precompile(Tuple{Downloads.Curl.var"#54#62"{Int32, FileWatching.FDWatcher, Downloads.Curl.Multi}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Base.SHA1})
precompile(Tuple{Base.var"#816#817"{Downloads.Curl.var"#31#35"{Downloads.Curl.Multi}, Base.Timer}})
precompile(Tuple{Downloads.var"#14#24"{Downloads.Curl.Easy, Downloads.var"#26#29"{Pkg.PlatformEngines.var"#16#17"{Base.IOContext{IO}, Pkg.MiniProgressBars.MiniProgressBar}}}})
precompile(Tuple{typeof(Base.close), FileWatching.FDWatcher})
precompile(Tuple{Tar.var"##tree_hash#94", String, Bool, typeof(Tar.tree_hash), Function, Base.Process})
precompile(Tuple{typeof(Base.unsafe_read), Base.PipeEndpoint, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.get), Base.Dict{String, Any}, Base.SubString{String}, Nothing})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, Base.Dict{String, Any}, Base.SubString{String}})
precompile(Tuple{typeof(Base.readbytes!), Base.PipeEndpoint, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, Tuple{String, String}, Base.SubString{String}})
precompile(Tuple{typeof(Base.getproperty), Base.Order.By{Tar.var"#by#40", Base.Order.ForwardOrdering}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Order.Lt{Base.Sort.var"#30#31"{Base.Order.By{Tar.var"#by#40", Base.Order.ForwardOrdering}}}, Symbol})
precompile(Tuple{Base.var"##s128#278", Vararg{Any, 5}})
precompile(Tuple{Tar.var"#hash_tree#39"{SHA.SHA1_CTX}, Base.Dict{String, Any}})
precompile(Tuple{Tar.var"#34#41"{Base.Dict{String, Any}, Tar.var"#by#40"}, Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}})
precompile(Tuple{Tar.var"#hash_tree#39"{SHA.SHA1_CTX}, Tuple{String, String}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, String}, Int64, Int64})
precompile(Tuple{Base.var"#893#896"{Base.Process}})
precompile(Tuple{typeof(Base.uv_shutdowncb_task), Ptr{Nothing}, Int32})
precompile(Tuple{typeof(Base.closewrite), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.:(!=)), Base.SHA1, Base.SHA1})
precompile(Tuple{typeof(Base.CoreLogging.shouldlog), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Nothing, Symbol, Symbol})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{names, T} where T<:Tuple where names, typeof(Base.CoreLogging.handle_message), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Vararg{Any, 6}})
precompile(Tuple{typeof(Base.haskey), Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:maxlog,), Tuple{Int64}}}, Symbol})
precompile(Tuple{typeof(Base.get!), Base.Dict{Any, Int64}, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Symbol})
precompile(Tuple{typeof(Base.isopen), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}})
precompile(Tuple{typeof(Base.CoreLogging.default_metafmt), Base.CoreLogging.LogLevel, Vararg{Any, 5}})
precompile(Tuple{typeof(Base.Filesystem.contractuser), String})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Base.TTY})
precompile(Tuple{typeof(Base.write), Base.TTY, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.get), Base.Dict{String, Any}, String, Bool})
precompile(Tuple{Pkg.Operations.var"#47#52"{Bool, Pkg.Types.Context, Tuple{Base.SubString{String}, Base.Dict{Base.UUID, Base.SHA1}}, Base.Channel{Any}, Base.Channel{NamedTuple{(:pkg, :urls, :path), Tuple{Pkg.Types.PackageEntry, Base.Set{String}, String}}}}})
precompile(Tuple{typeof(Core.memoryref), GenericMemory{:not_atomic, Pair{String, Bool}, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.identity), typeof(Base.Filesystem.joinpath)}, Symbol})
precompile(Tuple{Type{NamedTuple{(:force, :recursive), T} where T<:Tuple}, Tuple{Bool, Bool}})
precompile(Tuple{typeof(Base.something), Nothing, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Order.By{typeof(Base.last), Base.Order.ForwardOrdering}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Order.Lt{Base.Sort.var"#30#31"{Base.Order.By{typeof(Base.last), Base.Order.ForwardOrdering}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.BottomRF{typeof(Base.Filesystem.joinpath)}, Symbol})
precompile(Tuple{typeof(ArgTools.arg_write), Tar.var"#83#86"{String, Bool, Base.Process, Bool, Tar.var"#1#2"}, Base.DevNull})
precompile(Tuple{Tar.var"##read_tarball#45", Array{UInt8, 1}, Base.DevNull, typeof(Tar.read_tarball), Tar.var"#26#28"{Array{UInt8, 1}, Bool, Bool, Base.Process, String}, Tar.var"#1#2", Base.Process})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Pkg.GitTools.GitMode})
precompile(Tuple{Base.Filesystem.var"#_walkdir#35"{Bool, Bool, typeof(throw)}, Base.Channel{Tuple{String, Array{String, 1}, Array{String, 1}}}, String})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Base.Set{String}, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Base.Set{String}, String}, Int64, Int64})
precompile(Tuple{typeof(Pkg.MiniProgressBars.end_progress), Base.IOContext{IO}, Pkg.MiniProgressBars.MiniProgressBar})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:platform, :verbose, :io), Tuple{Base.BinaryPlatforms.Platform, Bool, Base.IOContext{IO}}}, typeof(Pkg.Operations.download_artifacts), Pkg.Types.EnvCache})
precompile(Tuple{typeof(Pkg.MiniProgressBars.start_progress), Base.IOContext{IO}, Pkg.MiniProgressBars.MiniProgressBar})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:internal_call, :strict, :warn_loaded, :timing, :_from_loading, :configs, :io), Tuple{Bool, Bool, Bool, Bool, Bool, Pair{Base.Cmd, Base.CacheFlags}, Base.TTY}}, typeof(Base.Precompilation.precompilepkgs), Array{String, 1}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Base.PkgId, Base.Set{Base.PkgId}}, Base.PkgId})
precompile(Tuple{typeof(Base.issubset), Array{Base.PkgId, 1}, Base.Set{Base.PkgId}})
precompile(Tuple{typeof(Base.create_expr_cache), Base.PkgId, String, String, String, Array{Pair{Base.PkgId, UInt128}, 1}, Base.Cmd, Base.CacheFlags, IO, IO, Array{Base.PkgId, 1}})
precompile(Tuple{Downloads.Curl.var"#31#35"{Downloads.Curl.Multi}, Base.Timer})
precompile(Tuple{Downloads.Curl.var"#32#36"{Base.Timer, Downloads.Curl.Multi}})
precompile(Tuple{typeof(Base.vect), Array{String, 1}, Vararg{Array{String, 1}}})
precompile(Tuple{typeof(Base.iterate), Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(Base.vect), Array{String, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.getindex), Type{Union{Nothing, Array{String, 1}}}, Array{String, 1}, Nothing})
precompile(Tuple{typeof(Base.iterate), Array{Union{Nothing, Array{String, 1}}, 1}})
precompile(Tuple{typeof(Base.first), Array{Any, 1}})
precompile(Tuple{typeof(Base.sprint), Function, Symbol})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Symbol})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, String, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.sym_in), Symbol, NTuple{47, Symbol}})
precompile(Tuple{typeof(Base.getproperty), Base.Generator{Tuple{}, FilePathsBase.var"#10#11"}, Symbol})
precompile(Tuple{typeof(Base.:(==)), Symbol, Symbol})
precompile(Tuple{Type{NamedTuple{(:signed, :compress), T} where T<:Tuple}, Tuple{Bool, Bool}})
precompile(Tuple{typeof(Base.rem), Char, Type{UInt8}})
precompile(Tuple{Type{NamedTuple{(:copycols,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Int64})
precompile(Tuple{Type{InvertedIndices.InvertedIndex{S} where S}, Symbol})
precompile(Tuple{Type{NamedTuple{(:copycols, :renamecols, :threads), T} where T<:Tuple}, Tuple{Bool, Bool, Bool}})
precompile(Tuple{Type{NamedTuple{(:copycols, :keeprows, :renamecols), T} where T<:Tuple}, Tuple{Bool, Bool, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Base.Fix2{typeof(Base.:(==)), String}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Base.Fix2{typeof(Base.:(==)), String}}, Int64, Int64})
precompile(Tuple{typeof(Base.contains), String})
precompile(Tuple{typeof(Base.:(&)), Int64, Int64})
precompile(Tuple{Type{NamedTuple{(:foreground,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{Type{NamedTuple{(:allrows, :allcols, :rowlabel, :summary, :eltypes, :truncate), T} where T<:Tuple}, Tuple{Bool, Bool, Symbol, Bool, Bool, Int64}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Function, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{Tables.ByRow{typeof(ClassHistoryConverter.Migrate._break_fez_cell)}, Symbol}})
precompile(Tuple{Type{NamedTuple{(:renamecols, :threads), T} where T<:Tuple}, Tuple{Bool, Bool}})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{Base.ExtremaMap{typeof(Base.identity)}, Base.BottomRF{typeof(Base._extrema_rf)}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.BottomRF{typeof(Base._extrema_rf)}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{SentinelArrays.var"#39#40"{Base.ExtremaMap{typeof(Base.identity)}, typeof(Base._extrema_rf)}, Base.BottomRF{typeof(Base._extrema_rf)}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{SentinelArrays.var"#37#38"{Base.ExtremaMap{typeof(Base.identity)}, typeof(Base._extrema_rf)}, Base.BottomRF{typeof(Base._extrema_rf)}}, Symbol})
precompile(Tuple{typeof(Base.hash), Tuple{Nothing, Nothing}, UInt64})
precompile(Tuple{typeof(Base._any_tuple), Function, Bool})
precompile(Tuple{Type{NamedTuple{(:on,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{Type{NamedTuple{(:view,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{NamedTuple{(:keep,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{Type{Base.Returns{V} where V}, Base.OneTo{Int64}})
precompile(Tuple{typeof(Base.ntuple), Base.Returns{Base.OneTo{Int64}}, Base.Val{1}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{typeof(Base.sum), Symbol}})
precompile(Tuple{typeof(Core.memoryref), GenericMemory{:not_atomic, Tuple{String, Int64}, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base._all_tuple), Function, Bool})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{Union{Base.Missing, String}}, Int64})
precompile(Tuple{typeof(Base.:(==)), Base.IndexLinear, Base.IndexLinear})
precompile(Tuple{typeof(Base.in), Symbol, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{Type{NamedTuple{(:keep_present,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.:(<=)), UInt8, UInt64})
precompile(Tuple{typeof(Base.rem), UInt8, Type{UInt64}})
precompile(Tuple{typeof(Base.getproperty), Base.Sort.SubArrayOptimization{Base.Sort.MissingOptimization{Base.Sort.BoolOptimization{Base.Sort.Small{10, Base.Sort.InsertionSortAlg, Base.Sort.IEEEFloatOptimization{SortingAlgorithms.TimSortAlg}}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Sort.MissingOptimization{Base.Sort.BoolOptimization{Base.Sort.Small{10, Base.Sort.InsertionSortAlg, Base.Sort.IEEEFloatOptimization{SortingAlgorithms.TimSortAlg}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Sort.BoolOptimization{Base.Sort.Small{10, Base.Sort.InsertionSortAlg, Base.Sort.IEEEFloatOptimization{SortingAlgorithms.TimSortAlg}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Sort.Small{10, Base.Sort.InsertionSortAlg, Base.Sort.IEEEFloatOptimization{SortingAlgorithms.TimSortAlg}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.Sort.IEEEFloatOptimization{SortingAlgorithms.TimSortAlg}, Symbol})
precompile(Tuple{typeof(Base.:(^)), Int64, Int64})
precompile(Tuple{typeof(Base.rem), UInt128, Type{UInt64}})
precompile(Tuple{Type{NamedTuple{(:unsafe,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.:(<)), Bool, Bool})
precompile(Tuple{typeof(CSV.isvaliddelim), Char})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UInt8, UInt8}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UInt8, UInt8}, Int64, Int64})
precompile(Tuple{typeof(CSV.tup), Char})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{22}})
precompile(Tuple{Base.var"##s128#279", Vararg{Any, 5}})
precompile(Tuple{Base.var"##s125#269", Any, Any, Any})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.UnitRange{Int64}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.length), Array{Int64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#270#272"{DataType, Array{Int64, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#270#272"{DataType, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}}, Int64, Int64})
precompile(Tuple{typeof(Base.:(<=)), Int64, Int32})
precompile(Tuple{typeof(Base.:(+)), Int32, Int64})
precompile(Tuple{Type{NamedTuple{(:transcode,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{typeof(Base.length), Symbol}})
precompile(Tuple{typeof(Core.memoryref), GenericMemory{:not_atomic, DataFrames.TransformationResult, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{Type{NamedTuple{(:keepkeys, :ungroup, :copycols, :keeprows, :renamecols, :threads), T} where T<:Tuple}, NTuple{6, Bool}})
precompile(Tuple{DataFrames.var"#696#697", Function})
precompile(Tuple{Type{BoundsError}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}})
precompile(Tuple{typeof(Base.isequal), Symbol, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getproperty), Base.BottomRF{typeof(Base.GMP.MPZ.add!)}, Symbol})
precompile(Tuple{Type{NamedTuple{(:discard_arbitrary_redundant_rules,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{Tables.ByRow{typeof(ClassHistoryConverter.MetricsCalculator._break_prereq_cell)}, Symbol}})
precompile(Tuple{Base.var"#58#59", Type})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:rev,), Tuple{Bool}}, typeof(DataFrames.order), Symbol})
precompile(Tuple{typeof(Core.memoryref), GenericMemory{:not_atomic, Number, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Main.main)})
precompile(Tuple{typeof(Base.values), Base.Dict{Symbol, Type}})
precompile(Tuple{typeof(Base.any), Function, Base.ValueIterator{Base.Dict{Symbol, Type}}})
precompile(Tuple{typeof(Base._any), CSV.var"#27#30", Base.ValueIterator{Base.Dict{Symbol, Type}}, Base.Colon})
precompile(Tuple{typeof(CSV.getbytebuffer), String, Bool})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:validate,), Tuple{Bool}}, typeof(CSV.initialize_columns), Int64, Base.Dict{Symbol, Type}, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{CSV.var"##initialize_columns#24", Bool, typeof(CSV.initialize_columns), Int64, Base.Dict{Symbol, Type}, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{typeof(CSV.initialize_column), Int64, Base.Dict{Symbol, Type}, Array{Symbol, 1}, Type, Bool, Parsers.Options})
precompile(Tuple{typeof(Base.map), Type, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Type{Symbol}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, Type{Symbol}}})
precompile(Tuple{typeof(Base.min), Int64, Int64})
precompile(Tuple{typeof(CSV.getname), String})
precompile(Tuple{Type{CSV.Context}, Bool, String, Array{Symbol, 1}, Int64, Int64, Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Array{CSV.Column, 1}, Tuple{Float64, Int64}, Bool, Type, Base.IdDict{Type, Type}, Type{InlineStrings.InlineString}, Int64, Bool, Int64, Array{Int64, 1}, Bool, Bool, Int64, Bool, Nothing, Bool, Base.Dict{Symbol, Type}})
precompile(Tuple{typeof(Base.CoreLogging.shouldlog), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Module, Symbol, Symbol})
precompile(Tuple{typeof(Base.CoreLogging.handle_message), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Vararg{Any, 6}})
precompile(Tuple{typeof(Base.convert), Type{String}, String})
precompile(Tuple{Type{NamedTuple{(:segments,), T} where T<:Tuple}, Tuple{Tuple{String}}})
precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}})
precompile(Tuple{FilePathsBase.var"##PosixPath#46", String, Type{FilePathsBase.PosixPath}, Tuple{String}})
precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}, String})
precompile(Tuple{typeof(Base.CoreLogging.default_metafmt), Base.CoreLogging.LogLevel, Vararg{Any, 5}})
precompile(Tuple{typeof(Base.string), Module})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{String, 1, UndefInitializer, Base.Missing, Array{String, 1}}, Int64})
precompile(Tuple{typeof(CSV.checkpooled!), Type{String}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{String, 1, UndefInitializer, Base.Missing, Array{String, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{String, 1}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(CSV.checkpooled!), Type{Union{Base.Missing, String}}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.length), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.SentinelArray{String, 1, UndefInitializer, Base.Missing, Array{String, 1}}})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.SentinelArray{String, 1, UndefInitializer, Base.Missing, Array{String, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.:(*)), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(==)), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Array{Int64, 1}, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Array{Int64, 1}, Int64}}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.all), Base.BitArray{1}})
precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(DataFrames._filter_helper), Function, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, String}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.any), Function, Array{DataType, 1}})
precompile(Tuple{typeof(Base._any), CSV.var"#26#29", Array{DataType, 1}, Base.Colon})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:validate,), Tuple{Bool}}, typeof(CSV.initialize_columns), Int64, Array{DataType, 1}, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{CSV.var"##initialize_columns#24", Bool, typeof(CSV.initialize_columns), Int64, Array{DataType, 1}, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{typeof(CSV.initialize_column), Int64, Array{DataType, 1}, Array{Symbol, 1}, Type, Bool, Parsers.Options})
precompile(Tuple{Type{CSV.Context}, Bool, String, Array{Symbol, 1}, Int64, Int64, Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Array{CSV.Column, 1}, Tuple{Float64, Int64}, Bool, Type, Base.IdDict{Type, Type}, Type{InlineStrings.InlineString}, Int64, Bool, Int64, Array{Int64, 1}, Bool, Bool, Int64, Bool, Nothing, Bool, Array{DataType, 1}})
precompile(Tuple{typeof(Dates.UTM), Int64})
precompile(Tuple{Type{InlineStrings.String7}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String7, 1, S, V, A} where A<:AbstractArray{InlineStrings.String7, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{String, 1, UndefInitializer, Base.Missing, Array{String, 1}}, String, Int64})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(DataFrames._filter!_helper), DataFrames.DataFrame, Base.Fix2{typeof(Base.contains), String}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.unique), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.repr), Int64})
precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Int64})
precompile(Tuple{typeof(Base.println), Base.TTY, String, Vararg{String}})
precompile(Tuple{typeof(Base.count), Function, Array{String, 1}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Int64, Array{String, 1}, Base.Colon})
precompile(Tuple{typeof(Base.mapfoldl_impl), Base.var"#361#362"{Base.Fix2{typeof(Base.:(==)), String}}, typeof(Base.add_sum), Int64, Array{String, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Main.var"#1#2"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#105#106"{Main.var"#1#2"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.copyto!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Main.var"#1#2"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Main.var"#1#2"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{Base.Broadcast.Extruded{DataFrames.DataFrameRows{DataFrames.DataFrame}, Tuple{Bool}, Tuple{Int64}}}}, Int64})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Mmap.var"#3#5"{Ptr{Nothing}, Int64}, GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex_evalf), DataFrames.var"#105#106"{Main.var"#1#2"{DataFrames.DataFrame, DataFrames.DataFrame}}, DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.in), Array{String, 1}})
precompile(Tuple{typeof(Base.split), String, String})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.strip), Tuple{Array{Base.SubString{String}, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.strip), Tuple{Array{Base.SubString{String}, 1}}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.strip), Tuple{Array{Base.SubString{String}, 1}}}})
precompile(Tuple{typeof(Base.any), Function, Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base._any), Base.ComposedFunction{typeof(Base.:(!)), Base.Fix2{typeof(Base.in), Array{String, 1}}}, Array{Base.SubString{String}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.:(∉)), String, Array{String, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, DataFrames.DataFrame})
precompile(Tuple{Base.var"#4#5"{DataFrames.var"#862#864"{Base.Dict{Any, String}}}, Tuple{DataType, Int64}})
precompile(Tuple{typeof(Base.get!), DataFrames.var"#863#865"{DataType, Int64}, Base.Dict{Any, String}, Type{String}})
precompile(Tuple{typeof(Base.setindex!), GenericMemory{:not_atomic, Int64, Core.AddrSpace{Core}(0x00)}, Int64, Int64})
precompile(Tuple{typeof(Base.escape_string), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, String, String})
precompile(Tuple{typeof(Base.isassigned), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.string), Int64})
precompile(Tuple{typeof(Base.isassigned), Array{String, 1}, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Main.var"#3#4"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#105#106"{Main.var"#3#4"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.copyto!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Main.var"#3#4"{DataFrames.DataFrame, DataFrames.DataFrame}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.in), Array{Base.SubString{String}, 1}})
precompile(Tuple{DataFrames.var"##filter#95", Bool, typeof(Base.filter), Pair{Symbol, Base.Fix2{typeof(Base.in), Array{Base.SubString{String}, 1}}}, DataFrames.DataFrame})
precompile(Tuple{typeof(DataFrames._filter_helper), Function, Array{String, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{Base.SubString{String}, 1}}}, Tuple{Array{String, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{Base.SubString{String}, 1}}}, Tuple{Array{String, 1}}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{Base.SubString{String}, 1}}}, Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, String}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.identity), UInt32})
precompile(Tuple{typeof(Base.getproperty), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.identity), Tuple{UInt32}}, Symbol})
precompile(Tuple{typeof(Base.getindex), UInt32})
precompile(Tuple{typeof(Base.convert), Type{UInt32}, UInt32})
precompile(Tuple{typeof(Base.unique!), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{DataFrames.var"##filter#95", Bool, typeof(Base.filter), Pair{Symbol, Base.Fix2{typeof(Base.:(==)), String}}, DataFrames.DataFrame})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{Array{String, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{Array{String, 1}}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.:(==)), String}}, Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.:(!=)), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{AbstractArray{T, 1} where T, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{Type{GenericMemory{:not_atomic, AbstractArray{T, 1} where T, Core.AddrSpace{Core}(0x00)}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{UInt32, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.copy), GenericMemory{:not_atomic, UInt32, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{String, UInt32}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Union{Base.Missing, Int64}, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{Type{GenericMemory{:not_atomic, Union{Base.Missing, Int64}, Core.AddrSpace{Core}(0x00)}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Int64, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.copy), GenericMemory{:not_atomic, Int64, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Union{Base.Missing, String}, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{Type{GenericMemory{:not_atomic, Union{Base.Missing, String}, Core.AddrSpace{Core}(0x00)}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{Symbol, Int64}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Symbol, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Symbol, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{InlineStrings.String7, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.copy), GenericMemory{:not_atomic, InlineStrings.String7, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{InlineStrings.String7, UInt32}, Base.IdDict{Any, Any}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{Tables.ByRow{typeof(ClassHistoryConverter.Migrate._break_fez_cell)}, Symbol}})
precompile(Tuple{typeof(Core.Compiler.setindex!), Array{Core.Compiler.CallInfo, 1}, Core.Compiler.InvokeCallInfo, Int64})
precompile(Tuple{Tables.ByRow{typeof(ClassHistoryConverter.Migrate._break_fez_cell)}, Array{String, 1}})
precompile(Tuple{typeof(Base.length), Array{Array{Base.SubString{String}, 1}, 1}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{Array{Base.SubString{String}, 1}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.join), Array{Array{Base.SubString{String}, 1}, 1}, Base.RefValue{String}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.join), Tuple{Array{Array{Base.SubString{String}, 1}, 1}, Base.RefValue{String}}}, Base.RefValue{String}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.string), Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(*)), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.join), Tuple{Array{Array{Base.SubString{String}, 1}, 1}, Base.RefValue{String}}}, Base.RefValue{String}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.string), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.join), Tuple{Array{Array{Base.SubString{String}, 1}, 1}, Base.RefValue{String}}}, Base.RefValue{String}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.string), Tuple{Array{String, 1}}}}}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{String, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.length), Array{Array{Base.SubString{String}, 1}, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Array{Base.SubString{String}, 1}, 1}}}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Array{Array{Base.SubString{String}, 1}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Base.SubString{String}, 1}, 1}})
precompile(Tuple{typeof(Base.length), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Base.SubString{String}, 1}, 1}, Int64})
precompile(Tuple{typeof(DataFrames.repeat_lengths!), Array{String, 1}, Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Array{Base.SubString{String}, 1}, 1}})
precompile(Tuple{typeof(Base.reduce), typeof(Base.vcat), Array{Array{Base.SubString{String}, 1}, 1}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(DataFrames.insertcols!), DataFrames.DataFrame, Int64, Pair{Symbol, Array{Base.SubString{String}, 1}}})
precompile(Tuple{typeof(Base.reduce), Function, Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Base._InitialValue, Array{Base.SubString{String}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.identity), typeof(Base.vcat)}, Symbol})
precompile(Tuple{typeof(Base._cshp), Int64, Tuple{Bool}, Tuple{}, Tuple{Int64}})
precompile(Tuple{typeof(Base.isempty), Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.rm_singleton_indices), Tuple{Bool}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.vcat), Base.IndexLinear, Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base._cat_t), Base.Val{1}, Type{Base.SubString{String}}, Array{Base.SubString{String}, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.cat_size_shape), Tuple{Bool}, Array{Base.SubString{String}, 1}, Base.SubString{String}})
precompile(Tuple{typeof(Base.cat_similar), Array{Base.SubString{String}, 1}, Type{Base.SubString{String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.__cat), Array{Base.SubString{String}, 1}, Tuple{Int64}, Tuple{Bool}, Array{Base.SubString{String}, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{Base.SubString{String}, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Array{Base.SubString{String}, 1}, Base.SubString{String}})
precompile(Tuple{typeof(Base.filter), Base.Fix2{typeof(Base.contains), String}, Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.chopprefix), Array{Base.SubString{String}, 1}, Base.RefValue{String}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.parse), Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.chopprefix), Tuple{Array{Base.SubString{String}, 1}, Base.RefValue{String}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UInt16, Char}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{UInt16, Char}, Int64, Int64})
precompile(Tuple{typeof(Base.:(|)), UInt64, UInt16})
precompile(Tuple{Type{NamedTuple{(:head, :tail), T} where T<:Tuple}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.parse), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.chopprefix), Tuple{Array{Base.SubString{String}, 1}, Base.RefValue{String}}}}}})
precompile(Tuple{typeof(Base.unique!), Array{Any, 1}})
precompile(Tuple{typeof(ClassHistoryConverter.Migrate.get_students_over_thresholds), DataFrames.DataFrame, DataFrames.DataFrame, Array{Any, 1}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.parent), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.parent), Array{String, 1}})
precompile(Tuple{typeof(Base.issorted), Array{String, 1}})
precompile(Tuple{Type{Array{AbstractArray{T, 1} where T, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(DataAPI.groupby), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(DataFrames.combine), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Union{Base.Regex, AbstractString, Function, Signed, Symbol, Unsigned, AbstractArray{T, 1} where T, AbstractArray{T, 2} where T, Pair{A, B} where B where A, Type, DataAPI.All{T} where T<:Tuple, DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
precompile(Tuple{DataFrames.var"##combine#799", Bool, Bool, Bool, Bool, typeof(DataFrames.combine), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Union{Base.Regex, AbstractString, Function, Signed, Symbol, Unsigned, AbstractArray{T, 1} where T, AbstractArray{T, 2} where T, Pair{A, B} where B where A, Type, DataAPI.All{T} where T<:Tuple, DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
precompile(Tuple{DataFrames.var"#800#801"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Symbol, Pair{typeof(Base.sum), Symbol}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{typeof(Base.sum), Symbol}})
precompile(Tuple{DataFrames.var"#781#790"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{typeof(Base.sum), Symbol}}}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Base.SubString{String}, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Base.SubString{String}, 1}, Int64})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Base.SubString{String}, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#678#679", Array{Base.SubString{String}, 1}, Base.Colon})
precompile(Tuple{typeof(DataAPI.refarray), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), Array{String, 1}, Array{Base.SubString{String}, 1}, Nothing, Nothing})
precompile(Tuple{typeof(DataFrames.prepare_on_col), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.issorted), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(DataFrames._innerjoin_unsorted), Array{Base.SubString{String}, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Base.SubString{String}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(DataAPI.groupby), DataFrames.DataFrame, Array{Symbol, 1}})
precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}, Base.Val{false}, Array{Int64, 1}, Bool, Nothing, Bool})
precompile(Tuple{typeof(DataFrames.subset!), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Any})
precompile(Tuple{typeof(Base.map), DataFrames.var"#612#613"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Tuple{Pair{Symbol, ClassHistoryConverter.Migrate.var"#1#2"}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:copycols, :keepkeys, :threads), Tuple{Bool, Bool, Bool}}, typeof(DataFrames.select), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Union{Base.Regex, AbstractString, Function, Signed, Symbol, Unsigned, AbstractArray{T, 1} where T, AbstractArray{T, 2} where T, Pair{A, B} where B where A, Type, DataAPI.All{T} where T<:Tuple, DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
precompile(Tuple{DataFrames.var"##select#803", Bool, Bool, Bool, Bool, Bool, typeof(DataFrames.select), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Union{Base.Regex, AbstractString, Function, Signed, Symbol, Unsigned, AbstractArray{T, 1} where T, AbstractArray{T, 2} where T, Pair{A, B} where B where A, Type, DataAPI.All{T} where T<:Tuple, DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
precompile(Tuple{DataFrames.var"#804#805"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Symbol, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}})
precompile(Tuple{DataFrames.var"#779#788"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}}})
precompile(Tuple{DataFrames.var"#780#789"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}}})
precompile(Tuple{DataFrames.var"#781#790"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.Migrate.var"#1#2", Symbol}, Int64, Int64})
precompile(Tuple{typeof(DataFrames.do_call), ClassHistoryConverter.Migrate.var"#1#2", Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Tuple{Array{Int64, 1}}, Int64})
precompile(Tuple{typeof(Base.lock), DataFrames.var"#753#755"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Base.RefValue{Array{Int64, 1}}, Bool}, Base.ReentrantLock})
precompile(Tuple{typeof(DataFrames.wrap), Bool})
precompile(Tuple{typeof(Base.getindex), NamedTuple{(:x1,), Tuple{Bool}}, Int64})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:x1,), Tuple{Bool}}})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:x1,), Tuple{Bool}}, Tuple{Array{Bool, 1}}, Int64, Int64, Tuple{Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s496"}} where var"#s496"}}, Tuple{Array{Bool, 1}}})
precompile(Tuple{DataFrames.var"#848#851"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol}, Tuple{Array{Int64, 1}}, ClassHistoryConverter.Migrate.var"#1#2", Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s496"}} where var"#s496"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Bool, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s496"}} where var"#s496"}, Array{Bool, 1}, Base.ReentrantLock, ClassHistoryConverter.Migrate.var"#1#2", DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol}, DataFrames.FirstSingleCol})
precompile(Tuple{DataFrames.var"#754#756"{Bool, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Symbol, Array{Bool, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{DataFrames.TransformationResult}, Array{Int64, 1}, Array{Bool, 1}, Symbol, Bool, Int64})
precompile(Tuple{typeof(Base.length), Array{Bool, 1}})
precompile(Tuple{typeof(Base.isempty), Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(!)), Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Base.BitArray{1}}}})
precompile(Tuple{DataFrames.var"#227#228", Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.mightalias), Array{Base.SubString{String}, 1}, Base.BitArray{1}})
precompile(Tuple{DataFrames.var"#227#228", PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.mightalias), PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.:(<)), Int64, Float64})
precompile(Tuple{typeof(Base.deleteat!), Array{Base.SubString{String}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.deleteat!), PooledArrays.PooledArray{InlineStrings.String7, UInt32, 1, Array{UInt32, 1}}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.fill), Bool, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Bool, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.sum), Array{Bool, 1}})
precompile(Tuple{typeof(Base.cumsum), Array{Bool, 1}})
precompile(Tuple{typeof(Base.eachindex), Array{Int64, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{Int64, 1}})
precompile(Tuple{typeof(Base.lock), DataFrames.var"#618#619"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.setproperty!), DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Symbol, Int64})
precompile(Tuple{typeof(Base.unique!), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(DataFrames.refpool_and_array), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(DataFrames.refpool_and_array), Tuple{Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}, Array{String, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.first), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}, Tuple{Nothing, Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}, Tuple{Nothing, Nothing}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.last), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}, Tuple{Nothing, Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}, Tuple{Nothing, Nothing}}}}})
precompile(Tuple{typeof(Base.any), Function, Tuple{Array{String, 1}, Nothing, Nothing}})
precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}, Array{String, 1}}, Base.Val{true}, Nothing, Bool, Nothing, Bool})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Array{Symbol, 1}})
precompile(Tuple{typeof(Core.memoryref), GenericMemory{:not_atomic, Base.Order.Ordering, Core.AddrSpace{Core}(0x00)}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}}})
precompile(Tuple{DataFrames.var"#152#153"{Array{Int64, 1}}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{DataFrames.var"#152#153"{Array{Int64, 1}}, Array{String, 1}})
precompile(Tuple{typeof(DataFrames.rename!), DataFrames.DataFrame, Pair{Symbol, Symbol}})
precompile(Tuple{typeof(Main.students_with_projint_double_credit), DataFrames.DataFrame})
precompile(Tuple{typeof(Base._any), Base.Fix2{typeof(Base.in), Array{String, 1}}, Array{String, 1}, Base.Colon})
precompile(Tuple{typeof(Base.in), String, Array{String, 1}})
precompile(Tuple{typeof(CSV.write), String, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{DataType, 1}, Type, Base.Generator{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.var"#908#909"}, Int64})
precompile(Tuple{typeof(Base.isvarargtype), Any})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, String, String}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:cartao, :codigo, :rule_name), Tuple{String, String, String}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:cartao, :codigo, :rule_name), Tuple{String, String, String}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, Tuple{Symbol, Symbol, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, Tuple{Symbol, Symbol, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#114#115"{Array{UInt8, 1}, Base.RefValue{Int64}, Int64, Base.IOStream, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, UInt8, UInt8}, String, Int64, Symbol})
precompile(Tuple{typeof(Base.all), Function, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._all), Base.Fix2{typeof(Base.:(==)), String}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(DataFrames.refpool_and_array), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(DataFrames.refpool_and_array), Tuple{Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.first), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.last), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}, Tuple{Nothing, Nothing}}}}})
precompile(Tuple{typeof(Base.any), Function, Tuple{Array{String, 1}, Nothing}})
precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}, Base.Val{true}, Nothing, Bool, Nothing, Bool})
precompile(Tuple{typeof(ClassHistoryConverter.MetricsCalculator.calculate_all_metrics), String, Vararg{DataFrames.DataFrame, 6}})
precompile(Tuple{DataFrames.var"##filter#95", Bool, typeof(Base.filter), Pair{Symbol, Base.Fix2{typeof(Base.in), Array{String, 1}}}, DataFrames.DataFrame})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{String, 1}}}, Tuple{Array{String, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{String, 1}}}, Tuple{Array{String, 1}}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, DataFrames.var"#105#106"{Base.Fix2{typeof(Base.in), Array{String, 1}}}, Tuple{Array{String, 1}}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{typeof(Base.length), Symbol}})
precompile(Tuple{DataFrames.var"#779#788"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{typeof(Base.length), Symbol}}})
precompile(Tuple{DataFrames.var"#780#789"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{typeof(Base.length), Symbol}}})
precompile(Tuple{DataFrames.var"#781#790"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{typeof(Base.length), Symbol}}}})
precompile(Tuple{typeof(DataFrames.isagg), Pair{Int64, Pair{typeof(Base.length), Symbol}}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{DataFrames.Aggregate{typeof(Base.length), Nothing}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.view), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, Int64, Base.SubArray{String, 1, Array{String, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.SubArray{String, 1, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{Union{Base.Missing, Int64}, 1}, Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{String, 1}, Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Int64, 1}, Int64, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{Union{Base.Missing, String}, 1}, Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, String}, 1}, Int64, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.coalesce), Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.coalesce), Tuple{Array{Union{Base.Missing, Int64}, 1}, Int64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(-)), Int64, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Int64, Array{Int64, 1}}}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{Union{Base.Missing, Int64}, 1}, Base.BitArray{1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}}}})
precompile(Tuple{DataFrames.var"#152#153"{Array{Int64, 1}}, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{DataFrames.var"#152#153"{Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._array_for), Type{Union}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Union, 1}, Type, Base.Generator{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.var"#908#909"}, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Union, 1}, Type, Int64})
precompile(Tuple{Type{Array{Type, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Type, 1}, Int64, Array{Union, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Type, 1}, Type, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Type, 1}, Base.Generator{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.var"#908#909"}, Int64, Int64})
precompile(Tuple{Type{Tables.Schema{names, types} where types where names}, Array{Symbol, 1}, Array{Type, 1}})
precompile(Tuple{Tables.var"#11#13"{Tuple{Union{Base.Missing, Int64}, String, String, Int64}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:etapa, :codigo, :nome, :qt_students_needing_it), Tuple{Union{Base.Missing, Int64}, String, String, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:etapa, :codigo, :nome, :qt_students_needing_it), Tuple{Union{Base.Missing, Int64}, String, String, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{4, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, NTuple{4, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{CSV.var"#114#115"{Array{UInt8, 1}, Base.RefValue{Int64}, Int64, Base.IOStream, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, UInt8, UInt8}, Int64, Int64, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}})
precompile(Tuple{DataFrames.var"#779#788"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}}})
precompile(Tuple{DataFrames.var"#780#789"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}}})
precompile(Tuple{DataFrames.var"#781#790"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.MetricsCalculator.var"#3#5", Symbol}, Int64, Int64})
precompile(Tuple{typeof(DataFrames.do_call), ClassHistoryConverter.MetricsCalculator.var"#3#5", Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Tuple{Array{String, 1}}, Int64})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{GenericMemory{:not_atomic, UInt8, Core.AddrSpace{Core}(0x00)}}, Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}, Char})
precompile(Tuple{typeof(Base.lock), DataFrames.var"#753#755"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Base.RefValue{Array{Int64, 1}}, String}, Base.ReentrantLock})
precompile(Tuple{typeof(DataFrames.wrap), String})
precompile(Tuple{typeof(Base.getindex), NamedTuple{(:x1,), Tuple{String}}, Int64})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:x1,), Tuple{String}}})
precompile(Tuple{Type{Array{String, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:x1,), Tuple{String}}, Tuple{Array{String, 1}}, Int64, Int64, Tuple{Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s496"}} where var"#s496"}}, Tuple{Array{String, 1}}})
precompile(Tuple{DataFrames.var"#754#756"{Bool, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Symbol, Array{String, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{Pair{A, B} where B where A}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Pair{A, B} where B where A}, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, DataFrames.var"#105#106"{ClassHistoryConverter.MetricsCalculator.var"#4#6"{Base.Dict{String, String}}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#105#106"{ClassHistoryConverter.MetricsCalculator.var"#4#6"{Base.Dict{String, String}}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.get!), Base.Dict{String, String}, String, String})
precompile(Tuple{typeof(Base.contains), String, String})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{typeof(Base.length), Symbol}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{typeof(Base.length), Symbol}, Int64, Int64})
precompile(Tuple{typeof(DataFrames.do_call), typeof(Base.length), Array{Int64, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}, Int64})
precompile(Tuple{typeof(Base.lock), DataFrames.var"#753#755"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Base.RefValue{Array{Int64, 1}}, Int64}, Base.ReentrantLock})
precompile(Tuple{typeof(DataFrames.wrap), Int64})
precompile(Tuple{typeof(Base.getindex), NamedTuple{(:x1,), Tuple{Int64}}, Int64})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:x1,), Tuple{Int64}}})
precompile(Tuple{typeof(Base.view), Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(DataFrames.similar_missing), Int64, Array{Union{Base.Missing, Int64}, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(DataFrames.similar_missing), Int64, Array{Union{Base.Missing, String}, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, String}, 1}, Int64, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{Union{Base.Missing, String}, 1}, Base.BitArray{1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{String, 1}, Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{String, 1}, Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}}}})
precompile(Tuple{Tables.var"#11#13"{Tuple{Union{Base.Missing, Int64}, String, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Int64}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:etapa, :codigo, :nome, :creditos, :qt_students), Tuple{Union{Base.Missing, Int64}, String, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:etapa, :codigo, :nome, :creditos, :qt_students), Tuple{Union{Base.Missing, Int64}, String, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{5, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, NTuple{5, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.copyto!), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Int64, Base.SubArray{String, 1, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{typeof(Base.add_sum), Int64, Int64})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{Base.Missing}, Int64})
precompile(Tuple{DataFrames.Reduce{typeof(Base.add_sum), Nothing, Nothing}, Array{Union{Base.Missing, Int64}, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{typeof(DataFrames.groupreduce!_helper), Array{Union{Base.Missing, Int64}, 1}, DataFrames.var"#826#827", typeof(Base.add_sum), Nothing, Nothing, Bool, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}, Array{Int64, 1}, Base.Iterators.PartitionIterator{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:on,), Tuple{Symbol}}, typeof(DataAPI.outerjoin), DataFrames.DataFrame, DataFrames.DataFrame})
precompile(Tuple{typeof(Base._any), DataFrames.var"#678#679", PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(DataAPI.refarray), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{UInt32, 1}, Array{String, 1}, Base.Dict{String, UInt32}})
precompile(Tuple{typeof(DataFrames.map2refs), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.Dict{String, UInt32}})
precompile(Tuple{typeof(Base.length), Array{UInt32, 1}})
precompile(Tuple{typeof(DataFrames.prepare_on_col), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.isempty), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.issorted), Array{UInt32, 1}})
precompile(Tuple{typeof(DataFrames._innerjoin_sorted), Array{UInt32, 1}, Array{UInt32, 1}})
precompile(Tuple{typeof(DataFrames.similar_outer), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.view), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, Base.SubArray{String, 1, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(Base.view), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, Int64, Base.SubArray{String, 1, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{Type{Pair{A, B} where B where A}, Array{Symbol, 1}, Pair{typeof(Base.:(-)), Symbol}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, DataFrames.var"#554#555"{DataFrames.Index}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Symbol, 1}, DataFrames.var"#554#555"{DataFrames.Index}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Array{Int64, 1}, Pair{typeof(Base.:(-)), Symbol}})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.:(!)), Symbol})
precompile(Tuple{Type{Array{Array{Union{Base.Missing, Int64}, 1}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Union{Base.Missing, Int64}, 1}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.Generator{Array{Int64, 1}, DataFrames.var"#562#563"{DataFrames.DataFrameColumns{DataFrames.DataFrame}}}, Int64})
precompile(Tuple{typeof(Base.TupleOrBottom), Type, Vararg{Type}})
precompile(Tuple{typeof(Base.:(-)), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Array{Int64, 1}, Bool, Base.RefValue{Any}, Symbol, Array{Int64, 1}, Base.BitArray{1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{DataType, 1}, Type, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Type, 1}, Int64, Array{DataType, 1}, Int64, Int64})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Int64}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:cartao, :old_credits, :new_credits, :diff_credits), Tuple{String, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:cartao, :old_credits, :new_credits, :diff_credits), Tuple{String, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{4, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(Base.parent), Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{Tables.ByRow{typeof(ClassHistoryConverter.MetricsCalculator._break_prereq_cell)}, Symbol}})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Union{Base.Missing, String}, 1}, typeof(Base.:(!)), Symbol})
precompile(Tuple{Tables.ByRow{typeof(ClassHistoryConverter.MetricsCalculator._break_prereq_cell)}, Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{typeof(Base.length), Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{Array{String, 1}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.replace!), Function, Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(Base._replace!), ClassHistoryConverter.MetricsCalculator.var"#12#16", Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.filter!), Function, Array{Array{String, 1}, 1}})
precompile(Tuple{Type{Base.RefValue{T} where T}, ClassHistoryConverter.MetricsCalculator.var"#13#17"})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#13#17"}, Array{Array{String, 1}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#13#17"}, Array{Array{String, 1}, 1}}}})
precompile(Tuple{Type{Base.RefValue{T} where T}, ClassHistoryConverter.MetricsCalculator.var"#14#18"})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#14#18"}, Array{Array{String, 1}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#14#18"}, Array{Array{String, 1}, 1}}}})
precompile(Tuple{Type{Base.RefValue{T} where T}, ClassHistoryConverter.MetricsCalculator.var"#15#19"})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#15#19"}, Array{Array{String, 1}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.filter!), Tuple{Base.RefValue{ClassHistoryConverter.MetricsCalculator.var"#15#19"}, Array{Array{String, 1}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{Pair{A, B} where B where A}, Array{String, 1}, Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Pair{A, B} where B where A}, Tuple{Array{String, 1}, Array{Array{String, 1}, 1}}}})
precompile(Tuple{Type{Base.Dict{String, Array{String, 1}}}, Array{Pair{String, Array{String, 1}}, 1}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}})
precompile(Tuple{DataFrames.var"#779#788"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}}})
precompile(Tuple{DataFrames.var"#780#789"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}}})
precompile(Tuple{DataFrames.var"#781#790"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Symbol}, Int64, Int64})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{Base.var"#353#354"{typeof(Base.length)}, Base.BottomRF{typeof(Base._rf_findmax)}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.BottomRF{typeof(Base._rf_findmax)}, Symbol})
precompile(Tuple{typeof(DataFrames.do_call), ClassHistoryConverter.MetricsCalculator.var"#20#21"{Base.Dict{String, Array{String, 1}}}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Tuple{Array{String, 1}}, Int64})
precompile(Tuple{typeof(Base.lock), DataFrames.var"#753#755"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Base.RefValue{Array{Int64, 1}}, Base.RefValue{Array{String, 1}}}, Base.ReentrantLock})
precompile(Tuple{typeof(DataFrames.wrap), Base.RefValue{Array{String, 1}}})
precompile(Tuple{typeof(Base.getindex), NamedTuple{(:x1,), Tuple{Base.RefValue{Array{String, 1}}}}, Int64})
precompile(Tuple{typeof(DataFrames.wrap_row), Base.RefValue{Array{String, 1}}, DataFrames.FirstSingleCol})
precompile(Tuple{typeof(Base.getindex), NamedTuple{(:x1,), Tuple{Array{String, 1}}}, Int64})
precompile(Tuple{typeof(Base.ntuple), DataFrames.var"#837#841"{Tuple{DataType}, Int64}, Int64})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{Array{String, 1}}, Int64})
precompile(Tuple{Type{Array{Array{String, 1}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:x1,), Tuple{Array{String, 1}}}, Tuple{Array{Array{String, 1}, 1}}, Int64, Int64, Tuple{Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s496"}} where var"#s496"}}, Tuple{Array{Array{String, 1}, 1}}})
precompile(Tuple{DataFrames.var"#754#756"{Bool, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Symbol, Array{Array{String, 1}, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(DataFrames.reorder_cols!), Array{DataFrames.TransformationResult, 1}, Int64, Array{Array{String, 1}, 1}, Array{Int64, 1}, Bool, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{DataFrames.var"#787#796"{Array{AbstractArray{T, 1} where T, 1}}, Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Array{String, 1}, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Array{String, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Array{String, 1}, 1}, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.length), Array{Array{String, 1}, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Array{String, 1}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.join), Array{Array{String, 1}, 1}, Base.RefValue{String}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.join), Tuple{Array{Array{String, 1}, 1}, Base.RefValue{String}}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Array{Any, 1}})
precompile(Tuple{typeof(DataFrames.ordering), DataFrames.DataFrame, Array{Any, 1}, Function, Function, Bool, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(DataFrames.ordering), DataFrames.UserColOrdering{Symbol}, Function, Function, Bool, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.pairs), Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:rev,), Tuple{Bool}}}})
precompile(Tuple{typeof(Base.iterate), Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:rev,), Tuple{Bool}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:rev,), Tuple{Bool}}}, Int64})
precompile(Tuple{typeof(Base.push!), Array{Base.Order.Ordering, 1}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Base.getindex), DataFrames.Index, Symbol})
precompile(Tuple{typeof(Base.push!), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(DataFrames.ordering), Symbol, Function, Function, Bool, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.push!), Array{Base.Order.Ordering, 1}, Base.Order.ForwardOrdering})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Array{Base.Order.Ordering, 1}, Tuple{Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Tuple{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, Tuple{Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.argtail), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Tuple{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, Tuple{Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, Int64, Union{Base.Missing, Int64}, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Union{Base.Missing, String}}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:cartao, :diff, :old_size, :old_path, :new_size, :new_path), Tuple{String, Int64, Union{Base.Missing, Int64}, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Union{Base.Missing, String}}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:cartao, :diff, :old_size, :old_path, :new_size, :new_path), Tuple{String, Int64, Union{Base.Missing, Int64}, Union{Base.Missing, String}, Union{Base.Missing, Int64}, Union{Base.Missing, String}}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{6, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, NTuple{6, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, String}, 1}, Int64})
precompile(Tuple{typeof(ClassHistoryConverter.MetricsCalculator.both_negatives_student_grouping), DataFrames.DataFrame, DataFrames.DataFrame})
precompile(Tuple{typeof(DataFrames._innerjoin_sorted), Array{String, 1}, Array{String, 1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Array{Base.Order.Ordering, 1}, NTuple{6, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Tuple{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, NTuple{6, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Tuple{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ForwardOrdering, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, NTuple{6, Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, Vararg{Union{Base.Missing, Int64}, 6}}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:cartao, :atraso, :old_path, :new_path, :diff_cred, :old_cred, :new_cred), Tuple{String, Vararg{Union{Base.Missing, Int64}, 6}}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:cartao, :atraso, :old_path, :new_path, :diff_cred, :old_cred, :new_cred), Tuple{String, Vararg{Union{Base.Missing, Int64}, 6}}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{7, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, NTuple{7, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{typeof(Base.Iterators._only), Array{Int64, 1}, typeof(Base.iterate)})
precompile(Tuple{typeof(ClassHistoryConverter.MetricsCalculator.opt_creds_needed_per_student), DataFrames.DataFrame, DataFrames.DataFrame, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(DataFrames.refpool_and_array), Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(DataFrames.refpool_and_array), Tuple{Tuple{PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.first), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.last), Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Array{String, 1}, Array{UInt32, 1}}}}}})
precompile(Tuple{typeof(Base.any), Function, Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.any), Function, Tuple{Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.deleteat!), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.coalesce), Array{Union{Base.Missing, Int64}, 1}, Base.RefValue{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.coalesce), Tuple{Array{Union{Base.Missing, Int64}, 1}, Base.RefValue{Int64}}}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{Tables.ByRow{ClassHistoryConverter.MetricsCalculator.var"#22#23"{Int64}}, Symbol}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{Tables.ByRow{ClassHistoryConverter.MetricsCalculator.var"#22#23"{Int64}}, Symbol}})
precompile(Tuple{Tables.ByRow{ClassHistoryConverter.MetricsCalculator.var"#22#23"{Int64}}, Array{Int64, 1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{typeof(ClassHistoryConverter.MetricsCalculator.diff_opt_creds_needed_per_student), DataFrames.DataFrame, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(-)), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, Int64, Int64, Int64}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:cartao, :old_opt_cred, :new_opt_cred, :diff), Tuple{String, Int64, Int64, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:cartao, :old_opt_cred, :new_opt_cred, :diff), Tuple{String, Int64, Int64, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, NTuple{4, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(ClassHistoryConverter.MetricsCalculator.summarise), Vararg{DataFrames.DataFrame, 6}})
precompile(Tuple{typeof(Base.length), Array{Number, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Number, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), GenericMemory{:not_atomic, AbstractArray{T, 1} where T, Core.AddrSpace{Core}(0x00)}, Array{Number, 1}, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{Union{Base.Missing, Int64}, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(Base.similar), Int64, Array{String, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.all), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base._all), Base.ComposedFunction{typeof(Base.:(!)), typeof(Base.ismissing)}, Array{Union{Base.Missing, Int64}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(*)), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.push!), DataFrames.DataFrame, Tuple{String, Int64}})
precompile(Tuple{typeof(Base.push!), Array{Number, 1}, Int64})
precompile(Tuple{typeof(Base.push!), DataFrames.DataFrame, Tuple{String, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Number, 1}, Float64})
precompile(Tuple{Tables.var"#11#13"{Tuple{String, Number}}, Int64})
precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:name, :value), Tuple{String, Number}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#107#108"{Bool, Bool, Tables.Schema{(:name, :value), Tuple{String, Number}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, Tuple{Symbol, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, Tuple{Symbol, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{typeof(Base.getindex), Array{Number, 1}, Int64})
precompile(Tuple{CSV.var"#114#115"{Array{UInt8, 1}, Base.RefValue{Int64}, Int64, Base.IOStream, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, UInt8, UInt8}, Float64, Int64, Symbol})
